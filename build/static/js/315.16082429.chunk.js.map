{"version":3,"file":"static/js/315.16082429.chunk.js","mappings":"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","sources":["components/Auth/LoginForm.js","components/Auth/RegisterForm.js","components/Auth/VerifyCodeForm.js","components/Auth/ForgotPasswordForm.js","components/Auth/ResetPasswordForm.js","pages/LoginPage.js","urls.js","utils/checkToken.js","utils/cookie.js","utils/themeUtils.js"],"sourcesContent":["// src/components/Auth/LoginForm.js\r\nimport React, { useState } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login } from '../../redux/slices/authSlice';\r\nimport { setCookie } from '../../utils/cookie'\r\n\r\n\r\nconst url = require('../../urls');\r\n\r\nconst LoginForm = ({ setCurrentForm }) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post(url.login, { email, password }, { \r\n        withCredentials: true   // Bật cookie khi gửi request\r\n      });\r\n      if (response.status === 200) {\r\n        dispatch(login({ token: response.data.accessToken }));\r\n        setCookie('accessToken',response.data.accessToken,15)\r\n        navigate('/rooms');\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Xử lý đăng nhập Google\r\n  const handleGoogleLoginSuccess = async (credentialResponse) => {\r\n    try {\r\n      const response = await axios.post(url.googleLogin, {\r\n        tokenId: credentialResponse.credential,\r\n      }, { \r\n        withCredentials: true   // Bật cookie khi gửi request\r\n      });\r\n      \r\n      if (response.status === 200) {\r\n        setCookie('accessToken',response.data.accessToken,15)\r\n        dispatch(login({ user: response.data.user, token: response.data.accessToken }));\r\n        navigate('/rooms');\r\n      }\r\n    } catch (err) {\r\n      console.error('Đăng nhập Google thất bại:', err);\r\n      setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin} className=\"shadow p-3 mb-5 rounded\">\r\n      {/* Form đăng nhập thông thường */}\r\n      <div className=\"mb-3\">\r\n        <input\r\n          style={{ border: 'gray 1px solid' }}\r\n          autoFocus\r\n          type=\"email\"\r\n          className=\"form-control-lg w-100\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          placeholder=\"Email\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <input\r\n          style={{ border: 'gray 1px solid' }}\r\n          type=\"password\"\r\n          className=\"form-control-lg w-100\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          placeholder=\"Mật Khẩu\"\r\n        />\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary w-100 btn-lg\"\r\n        disabled={loading}\r\n        style={{ fontWeight: 'bolder'}}\r\n      >\r\n        {loading ? 'Đang tải...' : 'Đăng nhập'}\r\n      </button>\r\n\r\n      \r\n\r\n      <div className=\"mt-1 d-flex justify-content-end\">\r\n        <a style={{textDecoration:'none'}} href=\"#\" onClick={() => setCurrentForm('forgotPassword')}>Quên mật khẩu?</a>\r\n      </div>\r\n      <hr />\r\n      <div className=\"mt-3\">\r\n        <GoogleLogin\r\n          onSuccess={handleGoogleLoginSuccess}\r\n          onError={() => {\r\n            setError('Đăng nhập Google thất bại.');\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"mt-3 d-flex justify-content-center\">\r\n        <button\r\n          className=\"btn btn-success w-75\"\r\n          onClick={() => setCurrentForm('register')}\r\n          style={{ fontWeight: 'bolder' }}\r\n        >\r\n          Tạo tài khoản mới\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// src/components/Auth/RegisterForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst url = require('../../urls');\r\n\r\nconst RegisterForm = ({ setCurrentForm,setIsRegister,setEmailCode }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    setIsRegister(true)\r\n    try {\r\n      const response = await axios.post(url.register, { email, password });\r\n      if (response.status === 200) {\r\n        setEmailCode(email)\r\n          setCurrentForm('verifyCode'); // Chuyển sang form xác thực mã code\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"shadow p-3 mb-5 bg-white rounded\">\r\n        <h2 style={{fontWeight:'bolder'}}>Đăng ký</h2>\r\n        <p>Một tài khoản để kết nối với mọi người.</p>\r\n      <div className=\"mb-3 mt-2\">\r\n        <input\r\n          style={{ border: 'gray 1px solid' }}\r\n          autoFocus\r\n          type=\"email\"\r\n          className=\"form-control-lg w-100\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          placeholder=\"Email\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <input\r\n          style={{ border: 'gray 1px solid' }}\r\n          type=\"password\"\r\n          className=\"form-control-lg w-100\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          placeholder=\"Mật Khẩu\"\r\n        />\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {success && <p className=\"success-message\">{success}</p>}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary w-100 btn-lg\"\r\n        disabled={loading}\r\n        style={{ fontWeight: 'bolder' }}\r\n      >\r\n        {loading ? 'Đang tải...' : 'Đăng ký'}\r\n      </button>\r\n\r\n      <div className=\"mt-1 d-flex justify-content-end\">\r\n        <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => setCurrentForm('login')}>\r\n          Quay lại Đăng nhập\r\n        </a>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// src/components/Auth/VerifyCodeForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst url = require('../../urls');\r\n\r\nconst VerifyCodeForm = ({ setCurrentForm, isRegister, email }) => {\r\n  const [code, setCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleVerify = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      if (isRegister) {\r\n        const response = await axios.post(url.verifyCode, { email, code });\r\n        if (response.status === 200) {\r\n          setSuccess('Xác thực thành công! Vui lòng chờ ...');\r\n          setTimeout(() => {\r\n            setCurrentForm('login'); // Chuyển về form đăng nhập sau khi xác thực thành công\r\n          }, 2000);\r\n        }\r\n      } else {\r\n        const response = await axios.post(url.verifyResetCode, { email, code }, { \r\n          withCredentials: true   // Bật cookie khi gửi request\r\n        });\r\n        if (response.status === 200) {\r\n          setCurrentForm('resetPassword');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        setError(err.response.data.message);\r\n      } else {\r\n        setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleVerify} className=\"shadow p-3 mb-5 bg-white rounded\">\r\n      <h2 style={{ fontWeight: 'bolder' }}>Xác thực mã</h2>\r\n      <p>Nhập mã code đã được gửi tới email: {email}</p>\r\n      <div className=\"mb-3 mt-2\">\r\n        <input\r\n          style={{ border: 'gray 1px solid' }}\r\n          autoFocus\r\n          type=\"text\"\r\n          className=\"form-control-lg w-100\"\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n          required\r\n          placeholder=\"Mã Xác Thực\"\r\n        />\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {success && <p className=\"success-message\" style={{ color: 'darkgreen' }}>{success}</p>}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary w-100 btn-lg\"\r\n        disabled={loading}\r\n        style={{ fontWeight: 'bolder' }}\r\n      >\r\n        {loading ? 'Đang tải...' : 'Xác thực'}\r\n      </button>\r\n      {\r\n        isRegister ? \r\n        <div className=\"mt-1 d-flex justify-content-end\">\r\n          <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => setCurrentForm('register')}>\r\n            Quay lại Đăng ký\r\n          </a>\r\n        </div>\r\n        : \r\n        <div className=\"mt-1 d-flex justify-content-end\">\r\n          <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => setCurrentForm('forgotPassword')}>\r\n            Quay lại Nhập Email\r\n          </a>\r\n        </div>\r\n      }\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VerifyCodeForm;\r\n","// src/components/Auth/ForgotPasswordForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst url = require('../../urls');\r\n\r\nconst ForgotPasswordForm = ({ setCurrentForm, setIsRegister, setEmailCode }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleForgotPassword = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n        setIsRegister(false)\r\n        try {\r\n            const response = await axios.post(url.forgotPassword, { email });\r\n            if (response.status === 200) {\r\n                setEmailCode(email)\r\n                setCurrentForm('verifyCode'); // Chuyển sang form nhập mã code\r\n            }\r\n        } catch (err) {\r\n            if (err.response && err.response.status === 400) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleForgotPassword} className=\"shadow p-3 mb-5 bg-white rounded\">\r\n            <h2 style={{ fontWeight: 'bolder' }}>Quên mật khẩu</h2>\r\n            <p>Nhập email của bạn để nhận mã khôi phục mật khẩu</p>\r\n            <div className=\"mb-3 mt-2\">\r\n                <input\r\n                    style={{ border: 'gray 1px solid' }}\r\n                    autoFocus\r\n                    type=\"email\"\r\n                    className=\"form-control-lg w-100\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                    placeholder=\"Email\"\r\n                />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {success && <p className=\"success-message\">{success}</p>}\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 btn-lg\"\r\n                disabled={loading}\r\n                style={{ fontWeight: 'bolder' }}\r\n            >\r\n                {loading ? 'Đang tải...' : 'Gửi mã xác thực'}\r\n            </button>\r\n\r\n            <div className=\"mt-1 d-flex justify-content-end\">\r\n                <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => setCurrentForm('login')}>\r\n                    Quay lại Đăng nhập\r\n                </a>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ForgotPasswordForm;\r\n","// src/components/Auth/ResetPasswordForm.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nconst url = require('../../urls');\r\n\r\nconst ResetPasswordForm = ({ setCurrentForm }) => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleForgotPassword = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n        try {\r\n            const response = await axios.post(url.resetPassword, { newPassword }, { \r\n                withCredentials: true   // Bật cookie khi gửi request\r\n              });\r\n            if (response.status === 200) {\r\n                setSuccess('Đổi mật khẩu thành công! Vui lòng chờ ...');\r\n                setTimeout(() => {\r\n                    setCurrentForm('login'); // Chuyển về form đăng nhập sau khi xác thực thành công\r\n                }, 2000);\r\n            }\r\n        } catch (err) {\r\n            if (err.response && err.response.status === 400) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError('Có lỗi xảy ra, vui lòng thử lại.');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleForgotPassword} className=\"shadow p-3 mb-5 bg-white rounded\">\r\n            <h2 style={{ fontWeight: 'bolder' }}>Đổi mật khẩu</h2>\r\n            <p>Nhập mật khẩu mới của bạn.</p>\r\n            <div className=\"mb-3 mt-2\">\r\n                <input\r\n                    style={{ border: 'gray 1px solid' }}\r\n                    type=\"password\"\r\n                    className=\"form-control-lg w-100\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    required\r\n                    placeholder=\"Mật Khẩu Mới\"\r\n                />\r\n            </div>\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {success && <p className=\"success-message\" style={{color:'darkgreen', fontWeight:'bolder'}}>{success}</p>}\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 btn-lg\"\r\n                disabled={loading}\r\n                style={{ fontWeight: 'bolder' }}\r\n            >\r\n                {loading ? 'Đang tải...' : 'Đổi mật khẩu'}\r\n            </button>\r\n\r\n            <div className=\"mt-1 d-flex justify-content-end\">\r\n                <a href=\"#\" style={{ textDecoration: 'none' }} onClick={() => setCurrentForm('login')}>\r\n                    Quay lại Đăng nhập\r\n                </a>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","// src/pages/LoginPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { loadAndApplyTheme } from '../utils/themeUtils';\r\nimport LoginForm from '../components/Auth/LoginForm';\r\nimport RegisterForm from '../components/Auth/RegisterForm';\r\nimport VerifyCodeForm from '../components/Auth/VerifyCodeForm';\r\nimport ForgotPasswordForm from '../components/Auth/ForgotPasswordForm';\r\nimport ResetPasswordForm from '../components/Auth/ResetPasswordForm';\r\nimport Logo from '../assets/images/Logo.jpg';\r\nimport { CheckToken } from '../utils/checkToken';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../redux/slices/authSlice';\r\nconst LoginPage = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();  // Sử dụng useDispatch tại đây\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      const result = await CheckToken();  // Gọi hàm checkToken\r\n      if (!result.success) {\r\n        setLoading(false);   // Điều hướng nếu token không hợp lệ\r\n      } else {\r\n        // Dispatch thông tin người dùng nếu token hợp lệ\r\n        if (result.user) {\r\n          dispatch(login({ user: result.user }));\r\n          navigate('/rooms'); \r\n        }\r\n        setLoading(false);  // Tắt trạng thái loading khi đã xong\r\n      }\r\n    };\r\n\r\n    verifyToken();  // Gọi hàm kiểm tra token\r\n    loadAndApplyTheme(); // Kiểm tra và áp dụng giao diện khi trang được tải\r\n  }, [navigate, dispatch]);\r\n  const [currentForm, setCurrentForm] = useState('login'); // 'login', 'register', 'forgotPassword', 'verifyCode', 'resetPassword'\r\n  const [emailCode, setEmailCode] = useState();\r\n  const [isRegister, setIsRegister] = useState(true);\r\n  const renderForm = () => {\r\n    switch (currentForm) {\r\n      case 'login':\r\n        return <LoginForm setCurrentForm={setCurrentForm} />;\r\n      case 'register':\r\n        return <RegisterForm setCurrentForm={setCurrentForm} setIsRegister={setIsRegister} setEmailCode={setEmailCode} />;\r\n      case 'forgotPassword':\r\n        return <ForgotPasswordForm setCurrentForm={setCurrentForm} setIsRegister={setIsRegister} setEmailCode={setEmailCode} />;\r\n      case 'verifyCode':\r\n        return <VerifyCodeForm setCurrentForm={setCurrentForm} isRegister={isRegister} email={emailCode} />;\r\n      case 'resetPassword':\r\n        return <ResetPasswordForm setCurrentForm={setCurrentForm} />;\r\n      default:\r\n        return <LoginForm setCurrentForm={setCurrentForm} />;\r\n    }\r\n  };\r\n  if (loading) {\r\n    return <div>Vui lòng chờ...</div>;  // Hiển thị loading trong khi chờ kết quả từ checkToken\r\n  }\r\n  return (\r\n    <div className=\"auth-page\">\r\n      {/* Bên trái: Logo */}\r\n      <div className=\"auth-page-logo\">\r\n        <img src={Logo} alt=\"Logo\" />\r\n      </div>\r\n      {/* Bên phải: Form */}\r\n      <div className=\"auth-form\">\r\n        {renderForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","//urls.js\r\nmodule.exports = {\r\n  //socket server\r\n  //http://localhost:1002\r\n  socketServer: 'https://backendvmess.onrender.com',\r\n\r\n  //Lấy danh sách tin nhắn của phòng\r\n  getMessagesByRoomId: (roomId) => `https://backendvmess.onrender.com/${roomId}/messages`,\r\n  // đăng nhập\r\n  login: 'https://backendvmess.onrender.com/login',\r\n  //đăng nhập bằng google\r\n  googleLogin: 'https://backendvmess.onrender.com/googleLogin',\r\n  // đăng ký\r\n  register: 'https://backendvmess.onrender.com/register',\r\n  //xác thực mã code đăng ký email\r\n  verifyCode: \"https://backendvmess.onrender.com/verifyCode\",\r\n  //yêu cầu quên mật khẩu\r\n  forgotPassword: \"https://backendvmess.onrender.com/forgotPassword\",\r\n  //xác thực mã quên mật khẩu\r\n  verifyResetCode: \"https://backendvmess.onrender.com/verifyResetCode\",\r\n  //đổi mật khẩu mới cho chức năng quên mật khẩu\r\n  resetPassword: \"https://backendvmess.onrender.com/resetPassword\",\r\n  // đăng xuất\r\n  logout: 'https://backendvmess.onrender.com/logout',\r\n\r\n\r\n  // kiểm tra token trước khi vào trang\r\n  checkToken: 'https://backendvmess.onrender.com/checkToken',\r\n  // yêu cầu lấy lại access token\r\n  refreshToken: 'https://backendvmess.onrender.com/refreshToken',\r\n\r\n  // Lấy danh sách phòng chat của người dùng\r\n  getUserRooms: 'https://backendvmess.onrender.com/getUserRooms',\r\n  // Tìm kiếm người dùng\r\n  searchUser: 'https://backendvmess.onrender.com/searchUser',\r\n  // Tạo phòng chat\r\n  createRoom: 'https://backendvmess.onrender.com/createRoom',\r\n\r\n  // Sửa tin nhắn\r\n  editMessageById: (messageId) => `https://backendvmess.onrender.com/editMessage/${messageId}`,\r\n  // Xoá tin nhắn\r\n  deleteMessageById: (messageId) => `https://backendvmess.onrender.com/deleteMessage/${messageId}`,\r\n\r\n  //đổi ảnh người dùng\r\n  updateProfilePicture: 'https://backendvmess.onrender.com/updateProfilePicture',\r\n  // đổi tên người dùng\r\n  updateUserName: 'https://backendvmess.onrender.com/updateUserName',\r\n  // đổi mật khẩu người dùng\r\n  changePassword: 'https://backendvmess.onrender.com/changePassword',\r\n};","import axios from 'axios';\r\nimport { getCookie, setCookie } from '../utils/cookie';\r\n\r\nconst url = require('../urls');\r\n\r\nconst CheckToken = async () => {\r\n    try {\r\n        const response = await axios.post(\r\n            url.checkToken,\r\n            {}, // Body request trống vì chỉ cần header\r\n            {\r\n                headers: {\r\n                    'Authorization': getCookie('accessToken') // Truyền token vào header\r\n                }\r\n            }\r\n        );\r\n\r\n        if (response.status === 200) {\r\n            return { success: true, user: response.data.user }; // Trả về kết quả và dữ liệu người dùng\r\n        }\r\n    } catch (err) {\r\n        if (err.response) {\r\n            if (err.response.status === 400 || err.response.status === 401) {\r\n                const result = await RefreshToken();\r\n\r\n                if (!result.success) {\r\n                    return { success: false };\r\n                } else {\r\n                    return { success: true, user: result.user };\r\n                }\r\n\r\n            } else if (err.response.status === 500) {\r\n                return { success: false };\r\n            }\r\n        } else {\r\n            return { success: false };\r\n        }\r\n    }\r\n    return { success: false }; // Mặc định trả về false nếu có lỗi\r\n};\r\n\r\nconst RefreshToken = async () => {\r\n    try {\r\n        const response = await axios.post(url.refreshToken, {}, { withCredentials: true });\r\n        if (response.status === 200) {\r\n            setCookie('accessToken', response.data.accessToken, 15);\r\n            return { success: true, user: response.data.user };\r\n        }\r\n    } catch (err) {\r\n        if (err.response) {\r\n            if (err.response.status === 400 || err.response.status === 500) {\r\n                return { success: false };\r\n            }\r\n        }\r\n        return { success: false };\r\n    }\r\n};\r\n\r\nexport { CheckToken, RefreshToken };\r\n","function getCookie(cookieName) {\r\n  const name = cookieName + \"=\";\r\n  const decodedCookie = decodeURIComponent(document.cookie);\r\n  const cookieArray = decodedCookie.split(\";\");\r\n\r\n  for (let i = 0; i < cookieArray.length; i++) {\r\n    let cookie = cookieArray[i];\r\n    while (cookie.charAt(0) === \" \") {\r\n      cookie = cookie.substring(1);\r\n    }\r\n    if (cookie.indexOf(name) === 0) {\r\n      return cookie.substring(name.length, cookie.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nfunction setCookie(cookieName, cookieValue, expirationMinutes) {\r\n  const expirationDate = new Date();\r\n  expirationDate.setMinutes(expirationDate.getMinutes() + expirationMinutes);\r\n  const expires = `expires=${expirationDate.toUTCString()}`;\r\n  document.cookie = `${cookieName}=${cookieValue}; ${expires}`;\r\n}\r\n\r\n\r\nfunction deleteCookie(cookieName) {\r\n  document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC`;\r\n}\r\nexport { getCookie, setCookie, deleteCookie };","// src/utils/themeUtils.js\r\nexport const applyTheme = (theme) => {\r\n    if (theme === 'dark') {\r\n      document.body.classList.add('dark-mode');\r\n      document.body.classList.remove('light-mode');\r\n    } else if (theme === 'light') {\r\n      document.body.classList.add('light-mode');\r\n      document.body.classList.remove('dark-mode');\r\n    } else {\r\n      // Áp dụng theo cài đặt hệ điều hành\r\n      const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      if (prefersDarkMode) {\r\n        document.body.classList.add('dark-mode');\r\n        document.body.classList.remove('light-mode');\r\n      } else {\r\n        document.body.classList.add('light-mode');\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n    }\r\n  };\r\n  \r\n  export const loadAndApplyTheme = () => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      applyTheme(savedTheme);\r\n    } else {\r\n      const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      applyTheme(prefersDarkMode ? 'dark' : 'light');\r\n    }\r\n  };\r\n  "],"names":["url","require","_ref","setCurrentForm","navigate","useNavigate","email","setEmail","useState","password","setPassword","loading","setLoading","error","setError","dispatch","useDispatch","_jsxs","onSubmit","async","e","preventDefault","response","axios","post","login","withCredentials","status","token","data","accessToken","setCookie","err","message","className","children","_jsx","style","border","autoFocus","type","value","onChange","target","required","placeholder","disabled","fontWeight","textDecoration","href","onClick","GoogleLogin","onSuccess","googleLogin","tokenId","credentialResponse","credential","user","console","onError","setIsRegister","setEmailCode","success","setSuccess","register","isRegister","code","setCode","verifyCode","setTimeout","verifyResetCode","color","forgotPassword","newPassword","setNewPassword","resetPassword","LoginPage","useEffect","result","CheckToken","verifyToken","loadAndApplyTheme","currentForm","emailCode","src","Logo","alt","renderForm","LoginForm","RegisterForm","ForgotPasswordForm","VerifyCodeForm","ResetPasswordForm","module","exports","socketServer","getMessagesByRoomId","roomId","logout","checkToken","refreshToken","getUserRooms","searchUser","createRoom","editMessageById","messageId","deleteMessageById","updateProfilePicture","updateUserName","changePassword","headers","getCookie","RefreshToken","cookieName","name","cookieArray","decodeURIComponent","document","cookie","split","i","length","charAt","substring","indexOf","cookieValue","expirationMinutes","expirationDate","Date","setMinutes","getMinutes","expires","toUTCString","deleteCookie","applyTheme","theme","body","classList","add","remove","window","matchMedia","matches","savedTheme","localStorage","getItem","prefersDarkMode"],"sourceRoot":""}